b062bd547de7132fc3fd825c9c2edfaa  libpcg.h
f347b745551154708cb25a7b0aa8f199  libpcg_host.so
040644af0f3c08db2a5ec26a4afbbc34  libpcg.so

Path: /nfs/ins/proj/icl/cg/users/smaslov/workspaces/dalvik_art/dev
URL: https://iclsvnins.ins.intel.com/ssg/dpd/icl/dev/branches/npcg/dev
Repository Root: https://iclsvnins.ins.intel.com/ssg/dpd/icl/dev
Repository UUID: 66fbe9ce-305a-11e0-a3e3-7da206602f15
Revision: 263223
Node Kind: directory
Schedule: normal
Last Changed Author: zansari
Last Changed Rev: 263189
Last Changed Date: 2014-06-20 04:32:56 +0700 (Fri, 20 Jun 2014)


------------------------------------------------------------------------
r263087 | smaslov | 2014-06-19 09:58:51 +0700 (Thu, 19 Jun 2014) | 3 lines

Summary: [Dalvik]: ensure 32-bit is the default target for standalone CG
Reviewed by: Zverev, Sergey I
Rurl: https://ir-codecollab.intel.com/ui#review:id=7498
------------------------------------------------------------------------
r262706 | dlkreitz | 2014-06-12 20:34:38 +0700 (Thu, 12 Jun 2014) | 6 lines

Dalvik: Fix for cq532357.  Fixed the logic in OPT_cascaded_slct for computing
the final op3/op4 of the new slcc instrution when the initial op3/op4 is the
integer slcc (i.e. the first slcc in the cascaded sequence).

Reviewer: Andy Kaylor

------------------------------------------------------------------------
r261710 | dlkreitz | 2014-05-29 21:39:51 +0700 (Thu, 29 May 2014) | 6 lines

Dalvik: Added an int3 opcode for injecting a debugger breakpoint.  This was
specifically requested by Dalvik, but it may be useful for other clients as
well as PCG developers.

Reviewer: Sergey Maslov

------------------------------------------------------------------------
r261277 | dlkreitz | 2014-05-24 03:29:04 +0700 (Sat, 24 May 2014) | 11 lines

Two small fixes for Dalvik/ART:

(1) Fixed the CGSetBinarySourcePosition callback so that
    P3OPT_emit_line_numbers gets set properly.

(2) Enable the client to call CGAddIndirectBranchTarget with a call
    instruction and have PCG appropriately classify the resulting edge
    as an EH edge.

Reviewer: Zia Ansari

------------------------------------------------------------------------
r261059 | dlkreitz | 2014-05-22 02:50:48 +0700 (Thu, 22 May 2014) | 7 lines

Dalvik: Handle callee-save registers as expected by ART quick frames.  All
callee-save spills locations must be at the top of the stack (nearest the
return address), and they must be in the order expected by the ART runtime.
This is triggered automatically when the client_id is c_client_art.

Reviewer: Zia Ansari

------------------------------------------------------------------------
r259066 | smaslov | 2014-04-25 11:51:49 +0700 (Fri, 25 Apr 2014) | 3 lines

Summary: #255764[Dalvik]: fix cascaded selects transformation when parent select is used as a true/false result in a sibling select.
Reviewed by: Dmitriev, Valery N
Rurl: https://ir-codecollab.intel.com/ui#review:id=6302
------------------------------------------------------------------------
r258944 | smaslov | 2014-04-24 09:23:56 +0700 (Thu, 24 Apr 2014) | 3 lines

Summary: Allow running PIL verification in non-DEBUG build. This can be useful to verify that our clients [Dalvik] create correct PIL.
Reviewed by: Ansari, Zia
Rurl: https://ir-codecollab.intel.com/ui#review:id=6316
------------------------------------------------------------------------
r258651 | smaslov | 2014-04-21 15:37:27 +0700 (Mon, 21 Apr 2014) | 3 lines

Summary: Fix x86linux self-build: use  compiler in Dalvik sanity build.
Reviewed by: Zakharin, Vyacheslav P
Rurl: https://ir-codecollab.intel.com/ui#review:id=6283
------------------------------------------------------------------------
r258419 | smaslov | 2014-04-18 11:35:07 +0700 (Fri, 18 Apr 2014) | 2 lines

Summary: Dalvik: fully switch to registered callbacks in libpcg, and build shared libpcg.so with debug info. Also fixes #512461.
Rurl: https://ir-codecollab.intel.com/ui#review:id=6228
------------------------------------------------------------------------
r258418 | smaslov | 2014-04-18 11:31:04 +0700 (Fri, 18 Apr 2014) | 3 lines

Summary: Tune LL-SSE optimization costs with a test case from Dalvik suites.
Reviewed by: Kaylor, Andrew
Rurl: https://ir-codecollab.intel.com/ui#review:id=6244
------------------------------------------------------------------------
r257144 | smaslov | 2014-04-04 15:43:15 +0700 (Fri, 04 Apr 2014) | 1 line

Dalvik: move to registered callbacks in SCG. Reviewer: Dave
------------------------------------------------------------------------
r257104 | smaslov | 2014-04-04 10:06:29 +0700 (Fri, 04 Apr 2014) | 2 lines

Summary: Dalvik: remove constant values of local symbols at routine end.
Rurl: https://ir-codecollab.intel.com/ui#review:id=6017
------------------------------------------------------------------------
r251681 | smaslov | 2014-02-11 15:29:12 +0700 (Tue, 11 Feb 2014) | 1 line

Dalvik: produce libpcg.log manifest file contating md5 sums for all files to be shipped for Dalvik and the summary of commits targeting Dalvik. Reviewer: Dave
------------------------------------------------------------------------
r248671 | smaslov | 2014-02-03 12:33:14 +0700 (Mon, 03 Feb 2014) | 7 lines

This merges all patches needed for Dalvik libpcg.
Now on one can build libpcg for Dalvik by using a clean ICS workspace (without needing any compiler patches).

Reviewers: Dave, Zia, Mitch, CJ, KevinB (I have approvals for check-in via npcg branch).



------------------------------------------------------------------------
r244741 | dlkreitz | 2013-12-03 22:15:19 +0700 (Tue, 03 Dec 2013) | 5 lines

Initial release of the script to build and package a Dalvik PCG library
release.

Reviewer: Sergey Maslov

------------------------------------------------------------------------
r243552 | dlkreitz | 2013-11-15 02:04:42 +0700 (Fri, 15 Nov 2013) | 9 lines

Avoid running x87 stack offset assignment in routines containing no x87.
This saves ~1% compile time for Dalvik.

In order to ensure that the change is safe, I added verification that
pcg_may_contain_fops is true when x87 is detected.  That exposed several
existing bugs, which are also fixed in this change set.

Reviewer: Zia Ansari

------------------------------------------------------------------------
r239465 | dlkreitz | 2013-09-21 20:16:02 +0700 (Sat, 21 Sep 2013) | 4 lines

Made a macro out of il_result_reg_type to improve compile time for Dalvik.

Reviewer: Zia Ansari

------------------------------------------------------------------------
r238984 | dlkreitz | 2013-09-13 01:56:29 +0700 (Fri, 13 Sep 2013) | 9 lines

Migrated CGGetMemConstSymbolFromClient to the CGRegisterCallback mechanism
for handling callback routines.  In the process, added an extra parameter so
that PCG can pass the client_routine_handle as part of the callback.  This is
needed for Dalvik (and is needed longer term for all the callbacks).  We will
remove the old fixed CGGetMemConstSymbolFromClient callback once the OpenCL
team migrates to the new one.

Reviewer: Zia Ansari

------------------------------------------------------------------------
r238270 | smaslov | 2013-08-30 09:47:38 +0700 (Fri, 30 Aug 2013) | 1 line

Dalvik: 1) do not duplicate patchable ltconst references 2) verification to catch multiple references to patchable symbols 3) Comparison of c_ltc_cgsymbol ltconsts for equality. Reviewer: Dave
------------------------------------------------------------------------
r237666 | dlkreitz | 2013-08-17 04:10:29 +0700 (Sat, 17 Aug 2013) | 13 lines

Several small changes for Dalvik.

(1) Add NOTREACHED() after the longjmp in sacg_throw to avoid a build error
    when building the Android hosted library.
(2) Automatically add an edge from first_block when the client creates an
    OC_entry instruction.
(3) Change the classification of edges out of blocks that end in NT_opname
    OC_jmp instructions to ET_normal.  That will enable Dalvik to use OC_jmp
    instead of OC_jsr for the loop backedge, which will re-enable correct loop
    detection by the loop finder.

Reviewer: Mitch Bodart

------------------------------------------------------------------------
r237204 | dlkreitz | 2013-08-07 03:48:51 +0700 (Wed, 07 Aug 2013) | 9 lines

Add TAPI support to the standalone CG trace harness.  Just uncomment the
#define TAPI_ENABLED and TAPI information will be dumped to tapi_results.txt
after compiling the trace.

Also increased the maximum number of symbols, because the Dalvik-supplied
traces exceeded the maximum of 1000.

Reviewer: Kevin B Smith

------------------------------------------------------------------------
r234739 | dlkreitz | 2013-06-12 02:05:04 +0700 (Wed, 12 Jun 2013) | 4 lines

Changed the licensing notice to meet Dalvik requirements.

Reviewer: Kevin B Smith

------------------------------------------------------------------------
r234636 | dlkreitz | 2013-06-09 04:17:42 +0700 (Sun, 09 Jun 2013) | 9 lines

Changed statically allocated STL objects to be dynamically allocated.  This
is necessary for Dalvik, which is multi-threaded.  There is only one
"compile" thread so PCG doesn't need to be completely thread safe, but the
statically allocated STL objects cause problems, because the constructors &
destructors get called for the non-compile threads, which can interfere with
the correct behavior of the "compile" thread.

Reviewer: Zia Ansari

------------------------------------------------------------------------
r234351 | dlkreitz | 2013-05-31 20:47:00 +0700 (Fri, 31 May 2013) | 16 lines

Several miscellaneous changes for Dalvik.
1) Change the way we classify CFG edges from blocks that end in an OC_jsr to
   a block other than last block.  (We consider these to be normal edges that
   are not splittable.)
2) Remove pointless NT_opb OC_jmp instructions.  The control flow is already
   modeling in the CFG, and they sometimes get in the way of optimization.
3) Handle noreturn calls correctly in the IL creation interface.
4) Always use OC_ldsd1 as the scalar double load opcode in PIL_get_mem_opc.
   (The standalone CG calls PIL_get_mem_opc before CG_scalar_double_load_opcode
    is initialized.  CG_scalar_double_load_opcode is pretty much obsolete and
    ought to be deleted.)
5) Pulled the condition out of an ASSERT_PROD to make setting breakpoints
   easier.

Reviewer: Zia Ansari

------------------------------------------------------------------------
r234296 | dlkreitz | 2013-05-30 20:26:49 +0700 (Thu, 30 May 2013) | 11 lines

Added support for symbols whose references can be patched in an unsynchronized
cross modifying code (XMC) environment.  Added the LTC_xmc_patchable attribute
to denote such symbols.  The comment in pcg_global.h explains the requirements
of an XMC patchable symbol.

This feature is needed for Dalvik, because their chaining mechanism involves
unsynchronized XMC.  Clients of the standalone CG can create XMC patchable
symbols like this: CGCreateSymbol("p").

Reviewer: Valery Dmitriev

------------------------------------------------------------------------
r232626 | dlkreitz | 2013-04-17 04:58:39 +0700 (Wed, 17 Apr 2013) | 9 lines

Several standalone CG changes inspired by the Dalvik work:
(1) Add support for setting the branch_prob from the client.
(2) Enable the use of movss1/movsd1 as store opcodes.
(3) Avoid moving the shift count into ECX for instructions that are already
    handled in trans_postpass.
(4) Dump the PIL after a CFG consistency check failure.

Reviewer: Zia Ansari

------------------------------------------------------------------------
r227761 | dlkreitz | 2012-12-22 01:50:18 +0700 (Sat, 22 Dec 2012) | 8 lines

Two small changes in support of the Dalvik PCG integration.
(1) Give the client a way to specify noreturn calls.
(2) Changed the way jsr is handled in naked functions.  Previously, we omitted
    both the epilog code AND the jump.  Now we omit the epilog but not the
    jump.

Reviewer: Zia Ansari
