f1d15f1daaa79d2efe5604e3849bb4c0  libirc_pcg.a
799fd00b05d07aa7bff3e7cedc1b7328  libpcg.a
c2539f6b75fc79d7ba611efd979edce5  libpcg.h
8f2583ffdab55e539926c6a0fad2687f  libpcg_host.a
f0913e41f7dd9d1f9ee250f2ad804f2b  libsvml_pcg.a

------------------------------------------------------------------------
r248671 | smaslov | 2014-02-03 12:33:14 +0700 (Mon, 03 Feb 2014) | 7 lines

This merges all patches needed for Dalvik libpcg.
Now on one can build libpcg for Dalvik by using a clean ICS workspace (without needing any compiler patches).

Reviewers: Dave, Zia, Mitch, CJ, KevinB (I have approvals for check-in via npcg branch).



------------------------------------------------------------------------
r244741 | dlkreitz | 2013-12-03 22:15:19 +0700 (Tue, 03 Dec 2013) | 5 lines

Initial release of the script to build and package a Dalvik PCG library
release.

Reviewer: Sergey Maslov

------------------------------------------------------------------------
r243552 | dlkreitz | 2013-11-15 02:04:42 +0700 (Fri, 15 Nov 2013) | 9 lines

Avoid running x87 stack offset assignment in routines containing no x87.
This saves ~1% compile time for Dalvik.

In order to ensure that the change is safe, I added verification that
pcg_may_contain_fops is true when x87 is detected.  That exposed several
existing bugs, which are also fixed in this change set.

Reviewer: Zia Ansari

------------------------------------------------------------------------
r239465 | dlkreitz | 2013-09-21 20:16:02 +0700 (Sat, 21 Sep 2013) | 4 lines

Made a macro out of il_result_reg_type to improve compile time for Dalvik.

Reviewer: Zia Ansari

------------------------------------------------------------------------
r238984 | dlkreitz | 2013-09-13 01:56:29 +0700 (Fri, 13 Sep 2013) | 9 lines

Migrated CGGetMemConstSymbolFromClient to the CGRegisterCallback mechanism
for handling callback routines.  In the process, added an extra parameter so
that PCG can pass the client_routine_handle as part of the callback.  This is
needed for Dalvik (and is needed longer term for all the callbacks).  We will
remove the old fixed CGGetMemConstSymbolFromClient callback once the OpenCL
team migrates to the new one.

Reviewer: Zia Ansari

------------------------------------------------------------------------
r238270 | smaslov | 2013-08-30 09:47:38 +0700 (Fri, 30 Aug 2013) | 1 line

Dalvik: 1) do not duplicate patchable ltconst references 2) verification to catch multiple references to patchable symbols 3) Comparison of c_ltc_cgsymbol ltconsts for equality. Reviewer: Dave
------------------------------------------------------------------------
r237666 | dlkreitz | 2013-08-17 04:10:29 +0700 (Sat, 17 Aug 2013) | 13 lines

Several small changes for Dalvik.

(1) Add NOTREACHED() after the longjmp in sacg_throw to avoid a build error
    when building the Android hosted library.
(2) Automatically add an edge from first_block when the client creates an
    OC_entry instruction.
(3) Change the classification of edges out of blocks that end in NT_opname
    OC_jmp instructions to ET_normal.  That will enable Dalvik to use OC_jmp
    instead of OC_jsr for the loop backedge, which will re-enable correct loop
    detection by the loop finder.

Reviewer: Mitch Bodart

------------------------------------------------------------------------
r237204 | dlkreitz | 2013-08-07 03:48:51 +0700 (Wed, 07 Aug 2013) | 9 lines

Add TAPI support to the standalone CG trace harness.  Just uncomment the
#define TAPI_ENABLED and TAPI information will be dumped to tapi_results.txt
after compiling the trace.

Also increased the maximum number of symbols, because the Dalvik-supplied
traces exceeded the maximum of 1000.

Reviewer: Kevin B Smith

------------------------------------------------------------------------
r234739 | dlkreitz | 2013-06-12 02:05:04 +0700 (Wed, 12 Jun 2013) | 4 lines

Changed the licensing notice to meet Dalvik requirements.

Reviewer: Kevin B Smith

------------------------------------------------------------------------
r234636 | dlkreitz | 2013-06-09 04:17:42 +0700 (Sun, 09 Jun 2013) | 9 lines

Changed statically allocated STL objects to be dynamically allocated.  This
is necessary for Dalvik, which is multi-threaded.  There is only one
"compile" thread so PCG doesn't need to be completely thread safe, but the
statically allocated STL objects cause problems, because the constructors &
destructors get called for the non-compile threads, which can interfere with
the correct behavior of the "compile" thread.

Reviewer: Zia Ansari

------------------------------------------------------------------------
r234351 | dlkreitz | 2013-05-31 20:47:00 +0700 (Fri, 31 May 2013) | 16 lines

Several miscellaneous changes for Dalvik.
1) Change the way we classify CFG edges from blocks that end in an OC_jsr to
   a block other than last block.  (We consider these to be normal edges that
   are not splittable.)
2) Remove pointless NT_opb OC_jmp instructions.  The control flow is already
   modeling in the CFG, and they sometimes get in the way of optimization.
3) Handle noreturn calls correctly in the IL creation interface.
4) Always use OC_ldsd1 as the scalar double load opcode in PIL_get_mem_opc.
   (The standalone CG calls PIL_get_mem_opc before CG_scalar_double_load_opcode
    is initialized.  CG_scalar_double_load_opcode is pretty much obsolete and
    ought to be deleted.)
5) Pulled the condition out of an ASSERT_PROD to make setting breakpoints
   easier.

Reviewer: Zia Ansari

------------------------------------------------------------------------
r234296 | dlkreitz | 2013-05-30 20:26:49 +0700 (Thu, 30 May 2013) | 11 lines

Added support for symbols whose references can be patched in an unsynchronized
cross modifying code (XMC) environment.  Added the LTC_xmc_patchable attribute
to denote such symbols.  The comment in pcg_global.h explains the requirements
of an XMC patchable symbol.

This feature is needed for Dalvik, because their chaining mechanism involves
unsynchronized XMC.  Clients of the standalone CG can create XMC patchable
symbols like this: CGCreateSymbol("p").

Reviewer: Valery Dmitriev

------------------------------------------------------------------------
r232626 | dlkreitz | 2013-04-17 04:58:39 +0700 (Wed, 17 Apr 2013) | 9 lines

Several standalone CG changes inspired by the Dalvik work:
(1) Add support for setting the branch_prob from the client.
(2) Enable the use of movss1/movsd1 as store opcodes.
(3) Avoid moving the shift count into ECX for instructions that are already
    handled in trans_postpass.
(4) Dump the PIL after a CFG consistency check failure.

Reviewer: Zia Ansari

------------------------------------------------------------------------
r227761 | dlkreitz | 2012-12-22 01:50:18 +0700 (Sat, 22 Dec 2012) | 8 lines

Two small changes in support of the Dalvik PCG integration.
(1) Give the client a way to specify noreturn calls.
(2) Changed the way jsr is handled in naked functions.  Previously, we omitted
    both the epilog code AND the jump.  Now we omit the epilog but not the
    jump.

Reviewer: Zia Ansari
